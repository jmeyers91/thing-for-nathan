{"version":3,"sources":["components/Column.js","components/Row.js","components/BlockButton.js","utils/getId.js","roles.js","utils/getRoleById.js","utils/getAlignmentColor.js","components/PlayerListItem.js","App.js","serviceWorker.js","index.js"],"names":["styled","_templateObject","Row_templateObject","BlockButton_templateObject","props","fade","disabled","idCounter","getId","id","roles","name","alignment","ability","example","map","role","i","_ref","length","Object","objectSpread","lightColor","getLightColor","darkColor","getDarkColor","index","concat","roleIdMap","reduce","set","Map","getRoleById","roleId","get","getAlignmentColor","PlayerListItem","player","onPlayerChange","onPlayerDelete","onRoleClick","rest","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","status","setStatus","react_default","a","createElement","Root","assign","faded","dead","TopRow","NameInput","placeholder","value","onChange","event","currentTarget","RoleHelpButton","onClick","fa","size","color","RoleSelect","key","AlignmentLabel","SecondRow","StatusForm","onSubmit","preventDefault","trimmedStatus","trim","statuses","includes","toConsumableArray","StatusInput","StatusAddButton","DeathRow","DeadAliveButton","DeleteButton","StatusRow","StatusPill","getStatusColor","filter","other","handleStatusClick","dark","Column","PlayerListItem_templateObject","Row","_templateObject2","_templateObject3","Input","_templateObject4","Select","_templateObject5","_templateObject6","_templateObject7","css","_templateObject8","BlockButton","_templateObject9","attrs","as","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","str","stringToHueCache","has","hash","charCodeAt","stringToHue","App_templateObject","Header","App_templateObject2","Content","App_templateObject3","HelpDrawer","App_templateObject4","open","HelpDrawerOverlay","App_templateObject5","keyframes","App_templateObject6","HelpDrawerCloseButton","App_templateObject7","DarkBlockButton","App_templateObject8","highlighted","NightHelperDrawer","players","onClose","_useState9","_useState10","playerIndex","setPlayerIndex","sort","sortPlayersByRoleOrder","isLastPlayer","Fragment","style","paddingTop","RoleHelp","hideName","flex","marginBottom","_ref2","b","indexOf","Boolean","window","location","hostname","match","ReactDOM","render","setPlayers","_useState3","_useState4","changed","setChanged","_useState5","_useState6","helpRole","setHelpRole","_useState7","_useState8","showNightHelper","setShowNightHelper","helpDrawerOpen","canUseNightHelper","every","_handleResetClick","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","SA","fire","title","text","showCancelButton","sent","stop","apply","this","arguments","_handleRandomizeClick","_callee2","playerRoles","newPlayers","_context2","abrupt","sampleSize","fantastical","human","handlePlayerChange","handlePlayerDelete","_x","_handlePlayerDelete","_callee3","_context3","handleViewRoleClick","closeHelpDrawer","App_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.800ce10e.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled('div')`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n`;\n","import styled from 'styled-components';\n\nexport default styled('div')`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  flex-shrink: 0;\n`;\n","import styled from 'styled-components';\n\nexport default styled('button')`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  outline: none;\n  border: none;\n  width: auto;\n  background-color: inherit;\n  color: inherit;\n  padding: 5px 20px 5px 20px;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: inherit;\n  opacity: ${props => (props.fade || props.disabled ? 0.5 : 1)};\n  transition: opacity 0.2s;\n`;\n","let idCounter = 1;\n\nexport default function getId() {\n  const id = idCounter;\n  idCounter += 1;\n  return id;\n}\n","export default [\n  {\n    name: 'Washerwoman',\n    alignment: 'Townsfolk',\n    ability:\n      'You start knowing that 1 of 2 players are a particular townsfolk role.',\n    example:\n      'The Washerwoman wakes up and learns that either Evan or Rachael are the Chef.'\n  },\n  {\n    name: 'Librarian',\n    alignment: 'Townsfolk',\n    ability:\n      'You start knowing that 1 of 2 players are a particular outsider role.',\n    example:\n      'The Librarian wakes up and learns that either Evan or Rachael are the Saint.'\n  },\n  {\n    name: 'Investigator',\n    alignment: 'Townsfolk',\n    ability:\n      'You start knowing that 1 of 2 players are a particular minion role.',\n    example:\n      'The Investigator wakes up and learns that either Evan or Rachael are the Baron.'\n  },\n  {\n    name: 'Chef',\n    alignment: 'Townsfolk',\n    ability:\n      'You start knowing how many pairs of evil players are sat next to eachother.',\n    example:\n      'The Demon is sitting next to the Baron. The chef wakes up and hears \"1\".'\n  },\n  {\n    name: 'Empath',\n    alignment: 'Townsfolk',\n    ability:\n      'Each night you are told how many of your living neighbors are Evil.',\n    example:\n      'The Empath is sitting next to the Gunslinger and the Librarian. They hear \"1\". '\n  },\n  {\n    name: 'Fortune Teller',\n    alignment: 'Townsfolk',\n    ability:\n      'Each night choose 2 players and learn if one of them is the Demon. There is one good player that registers falsely to you.',\n    example:\n      'The Fortune Teller chooses the Demon and the Librarian and receives a \"Yes\".'\n  },\n  {\n    name: 'Undertaker',\n    alignment: 'Townsfolk',\n    ability:\n      'Each night, you learn the role of the person who was executed that day.',\n    example:\n      'The Mayor is executed. That night, the Undertaker is shown the Mayor token.'\n  },\n  {\n    name: 'Monk',\n    alignment: 'Townsfolk',\n    ability:\n      'Each night, choose another player. They are safe from the Demon that night.',\n    example:\n      'The Monk chooses the Fortune Teller. The Demon attacks the Fortune Teller. The Fortune Teller survives.'\n  },\n  {\n    name: 'Ravenkeeper',\n    alignment: 'Townsfolk',\n    ability:\n      'If you are killed at night, you may learn the role of another player.',\n    example:\n      'The Demon kills the Ravenkeeper. They choose Ethan, and learn he is the Empath.'\n  },\n  {\n    name: 'Virgin',\n    alignment: 'Townsfolk',\n    ability:\n      'The first time you are nominated for execution, if the person nominating you is a Townsfolk, they are executed immediately.',\n    example:\n      'The Washerwoman nominates the Virgin. The Washerwoman is immediately executed.'\n  },\n  {\n    name: 'Slayer',\n    alignment: 'Townsfolk',\n    ability:\n      'Once per game, during the day, publicly nominate a player. If they are the Demon, they die.',\n    example: 'The Slayer chooses the Imp, the Good team wins.'\n  },\n  {\n    name: 'Soldier',\n    alignment: 'Townsfolk',\n    ability: 'You are safe from the Demon.',\n    example: 'The Demon attacks the Soldier, who does not die.'\n  },\n  {\n    name: 'Mayor',\n    alignment: 'Townsfolk',\n    ability:\n      'If only 3 players are alive, and no execution happens, you win. If you die at night, another player might die instead.',\n    example:\n      'There are three players alive and no executions happen. The Good team wins.'\n  },\n  {\n    name: 'Butler',\n    alignment: 'Outsider',\n    ability:\n      'Each night, choose another player. During the day, you may only vote if they do.',\n    example:\n      'The Butler choose Ethan at night. During the day, Ethan decides not to vote, so the Butler cannot vote either.'\n  },\n  {\n    name: 'Drunk',\n    alignment: 'Outsider',\n    ability:\n      'You do not know you are the Drunk. You think you are a Townsfolk, but your ability misfires.',\n    example:\n      'The Drunk thinks they are the Empath. They wake up and get a \"0\", even though they are sitting next to an Evil player.'\n  },\n  {\n    name: 'Recluse',\n    alignment: 'Outsider',\n    ability: 'You might register as Evil, even if dead.',\n    example:\n      'The Recluse is killed. That night, the Undertaker is told that they were the Imp.'\n  },\n  {\n    name: 'Saint',\n    alignment: 'Outsider',\n    ability: 'If you die by execution, the Good team loses.',\n    example:\n      'The Saint is nominated and receives enough votes to be executed. They die, and the game ends with Evil winning.'\n  },\n  {\n    name: 'Poisoner',\n    alignment: 'Minion',\n    ability:\n      'At night, choose a player: Their ability malfunctions that night and during the day.',\n    example:\n      'The Investigator is poisoned. They learn that either Evan or Rachael are the Baron, even though neither of them are.'\n  },\n  {\n    name: 'Spy',\n    alignment: 'Minion',\n    ability:\n      'You might register as a Townsfolk or Outsider, even while dead. At night, you may see the Grimoire.',\n    example:\n      'The Washerwoman learns that either Ethan or Rachael is the Ravenkeeper, even though Ethan is the Monk and Rachael is the Spy.'\n  },\n  {\n    name: 'Scarlet Woman',\n    alignment: 'Minion',\n    ability:\n      'If there are 5 or more players left alive and the Demon dies, you become the Demon.',\n    example:\n      'The Imp is executed, however there are 5 players left alive. The Scarlet Woman becomes the Imp.'\n  },\n  {\n    name: 'Baron',\n    alignment: 'Minion',\n    ability: 'There are two more Outsiders in play.',\n    example:\n      'At the start of the game, if the Baron is in play, remove two Townsfolk tokens and replace them with Outsider tokens.'\n  },\n  {\n    name: 'Imp',\n    alignment: 'Demon',\n    ability:\n      'At night choose a player and they die. If you choose yourself, one of your Minions becomes the new Imp.',\n    example:\n      'The Imp chooses to kill Ethan during the night, who was an Undertaker.'\n  }\n].map((role, i, { length }) => ({\n  id: i + 1,\n  lightColor: getLightColor(i, length),\n  darkColor: getDarkColor(i, length),\n  ...role\n}));\n\nfunction getLightColor(index, length) {\n  const hue = (360 * index) / length;\n  const sat = 80;\n  const lum = 70;\n  return `hsl(${hue},${sat}%,${lum}%)`;\n}\n\nfunction getDarkColor(index, length) {\n  const hue = (360 * index) / length;\n  const sat = 80;\n  const lum = 50;\n  return `hsl(${hue},${sat}%,${lum}%)`;\n}\n","import roles from '../roles';\n\nconst roleIdMap = roles.reduce((map, role) => {\n  map.set(role.id, role);\n  return map;\n}, new Map());\n\nexport default function getRoleById(roleId) {\n  return roleIdMap.get(+roleId);\n}\n","getAlignmentColor.dark = alignment => {\n  if (alignment === 'Demon' || alignment === 'Minion') {\n    return '#955';\n  }\n  return '#559';\n};\n\nexport default function getAlignmentColor(alignment) {\n  if (alignment === 'Demon' || alignment === 'Minion') {\n    return '#FAA';\n  }\n  return '#AAF';\n}\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { FaPlus, FaQuestionCircle, FaTrash } from 'react-icons/fa';\nimport Column from './Column';\nimport Row from './Row';\nimport roles from '../roles';\nimport BlockButton from './BlockButton';\nimport getRoleById from '../utils/getRoleById';\nimport getAlignmentColor from '../utils/getAlignmentColor';\n\nexport default function PlayerListItem(props) {\n  const {\n    player,\n    onPlayerChange,\n    onPlayerDelete,\n    onRoleClick,\n    ...rest\n  } = props;\n  const [status, setStatus] = useState('');\n\n  function handleNameChange(event) {\n    onPlayerChange({ ...player, name: event.currentTarget.value });\n  }\n\n  function handleRoleChange(event) {\n    onPlayerChange({\n      ...player,\n      role: getRoleById(event.currentTarget.value)\n    });\n  }\n\n  function handleStatusChange(event) {\n    setStatus(event.currentTarget.value);\n  }\n\n  function handleStatusFormSubmit(event) {\n    event.preventDefault();\n    const trimmedStatus = status.trim();\n\n    // ignore blanks\n    if (!trimmedStatus.length) {\n      return;\n    }\n\n    // ignore duplicates\n    if (player.statuses.includes(trimmedStatus)) {\n      return;\n    }\n\n    onPlayerChange({\n      ...player,\n      statuses: [...player.statuses, trimmedStatus]\n    });\n    setStatus('');\n  }\n\n  function handleDeadAliveClick() {\n    onPlayerChange({ ...player, dead: !player.dead });\n  }\n\n  function handleStatusClick(status) {\n    onPlayerChange({\n      ...player,\n      statuses: player.statuses.filter(other => other !== status)\n    });\n  }\n\n  return (\n    <Root {...rest} faded={player.dead}>\n      <TopRow>\n        <NameInput\n          placeholder=\"name\"\n          value={player.name || ''}\n          onChange={handleNameChange}\n        />\n        <RoleHelpButton\n          disabled={!player.role}\n          onClick={() => onRoleClick(player)}\n        >\n          <FaQuestionCircle\n            size={24}\n            color={player.role ? 'white' : 'rgba(255,255,255,0.2)'}\n          />\n        </RoleHelpButton>\n        <RoleSelect\n          value={player.role ? player.role.id : ''}\n          onChange={handleRoleChange}\n        >\n          <option disabled value=\"\">\n            Role\n          </option>\n          {roles.map(role => (\n            <option key={role.id} value={role.id}>\n              {role.name}\n            </option>\n          ))}\n        </RoleSelect>\n        {player.role && (\n          <AlignmentLabel color={getAlignmentColor(player.role.alignment)}>\n            {player.role.alignment}\n          </AlignmentLabel>\n        )}\n      </TopRow>\n\n      <SecondRow>\n        <StatusForm onSubmit={handleStatusFormSubmit}>\n          <StatusInput\n            placeholder=\"Status\"\n            value={status}\n            onChange={handleStatusChange}\n          />\n          <StatusAddButton>\n            <FaPlus color=\"#333\" />\n          </StatusAddButton>\n        </StatusForm>\n        <DeathRow>\n          <DeadAliveButton dead={player.dead} onClick={handleDeadAliveClick}>\n            {player.dead ? 'DEAD' : 'ALIVE'}\n          </DeadAliveButton>\n          <DeleteButton onClick={() => onPlayerDelete(player)}>\n            <FaTrash size={20} />\n          </DeleteButton>\n        </DeathRow>\n      </SecondRow>\n\n      <StatusRow>\n        {player.statuses.map((status, i) => (\n          <StatusPill\n            key={i}\n            color={getStatusColor(status)}\n            onClick={() => handleStatusClick(status)}\n          >\n            {status}\n            <span>{'\\u00D7'}</span>\n          </StatusPill>\n        ))}\n      </StatusRow>\n    </Root>\n  );\n}\n\nconst Root = styled(Column)`\n  padding: 20px 0 20px;\n  margin: 0 20px 0 20px;\n  border-bottom: 2px solid rgba(0, 0, 0, 0.5);\n  opacity: ${props => (props.faded ? 0.5 : 1)};\n  transition: opacity 0.5s;\n`;\n\nconst TopRow = styled(Row)`\n  margin-bottom: 20px;\n  > svg {\n    position: absolute;\n    right: 5px;\n    top: 50%;\n    transform: translate(0, -50%);\n    pointer-events: none;\n  }\n`;\n\nconst SecondRow = styled(Row)`\n  margin-bottom: 5px;\n`;\n\nconst Input = styled('input')`\n  flex: 1 1 auto;\n  height: 40px;\n  padding-left: 10px;\n  font-size: 16px;\n  min-width: 0;\n  border: none;\n`;\n\nconst Select = styled('select')`\n  color: white;\n  flex: 1;\n`;\n\nconst NameInput = styled(Input)`\n  flex: 1 1 120px;\n`;\n\nconst RoleSelect = styled(Select)`\n  flex: 1 0 160px;\n  font-size: 16px;\n  padding-left: 10px;\n  background-color: transparent;\n  border: none;\n  ${props => {\n    const role = props.value && getRoleById(props.value);\n    if (!role) {\n      return '';\n    }\n    return css`\n      color: white;\n      background-color: ${getAlignmentColor.dark(role.alignment)};\n    `;\n  }}\n`;\n\nconst RoleHelpButton = styled(BlockButton)`\n  padding: 0 10px 0 10px;\n`;\n\nconst StatusForm = styled(Row).attrs({ as: 'form' })`\n  height: 100%;\n  /* flex: 1 1 auto; */\n`;\n\nconst StatusAddButton = styled(BlockButton)`\n  position: relative;\n  background-color: white;\n  left: -1px;\n  width: 40px;\n  padding: 0;\n`;\n\nconst StatusInput = styled(Input)`\n  max-width: 120px;\n`;\n\nconst DeadAliveButton = styled(BlockButton)`\n  font-weight: bold;\n  font-size: 18px;\n  background-color: ${props => (props.dead ? '#222' : '#080')};\n  margin-left: 10px;\n  transition: background-color 0.1s;\n  max-width: 100px;\n`;\n\nconst StatusRow = styled(Row)`\n  flex-wrap: wrap;\n`;\n\nconst StatusPill = styled(BlockButton)`\n  align-items: center;\n  height: 30px;\n  border-radius: 15px;\n  padding: 3px 10px 3px 10px;\n  background-color: rgba(0, 0, 0, 0.8);\n  margin-right: 10px;\n  margin-top: 5px;\n  color: ${props => props.color};\n  span {\n    margin-left: 5px;\n  }\n`;\n\nconst AlignmentLabel = styled(Row)`\n  position: absolute;\n  right: 80px;\n  top: 100%;\n  transform: translate(50%, 0);\n  font-size: 10px;\n  color: ${props => props.color};\n`;\n\nconst DeleteButton = styled(BlockButton)`\n  padding: 0;\n  width: 60px;\n`;\n\nconst DeathRow = styled(Row)`\n  flex: 1 1 auto;\n  justify-content: flex-end;\n`;\n\nfunction getStatusColor(status) {\n  return `hsl(${stringToHue(status)}, 80%, 80%)`;\n}\n\n// From: https://gist.github.com/0x263b/2bdd90886c2036a1ad5bcf06d6e6fb37\nconst stringToHueCache = new Map();\nfunction stringToHue(str) {\n  if (!stringToHueCache.has(str)) {\n    const { length } = str;\n    let hash = 0;\n    if (length !== 0) {\n      for (let i = 0; i < length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n        hash = hash & hash;\n      }\n      hash = hash % 360;\n    }\n    stringToHueCache.set(str, hash);\n    return hash;\n  }\n  return stringToHueCache.get(str);\n}\n","import React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { FaTrash, FaDice, FaUserPlus, FaMoon } from 'react-icons/fa';\nimport SA from 'sweetalert2';\nimport sampleSize from 'lodash/sampleSize';\nimport * as fantastical from 'fantastical';\nimport Column from './components/Column';\nimport Row from './components/Row';\nimport BlockButton from './components/BlockButton';\nimport getId from './utils/getId';\nimport roles from './roles';\nimport PlayerListItem from './components/PlayerListItem';\nimport getAlignmentColor from './utils/getAlignmentColor';\n\nexport default function App() {\n  const [players, setPlayers] = useState([]);\n  const [changed, setChanged] = useState(false);\n  const [helpRole, setHelpRole] = useState(null);\n  const [showNightHelper, setShowNightHelper] = useState(false);\n\n  const helpDrawerOpen = !!helpRole || showNightHelper;\n  const canUseNightHelper =\n    players.length > 0 &&\n    players.every(player => {\n      return !!(player.role && player.name.length > 0);\n    });\n\n  async function handleResetClick() {\n    const confirmResult = await SA.fire({\n      title: 'Are you sure?',\n      text: 'This will delete all players.',\n      showCancelButton: true\n    });\n\n    if (confirmResult.value) {\n      setPlayers([]);\n      setChanged(false);\n    }\n  }\n\n  async function handleRandomizeClick() {\n    if (changed) {\n      const confirmResult = await SA.fire({\n        title: 'Are you sure?',\n        text: 'This will clear all your changes.',\n        showCancelButton: true\n      });\n      if (!confirmResult.value) {\n        return;\n      }\n    }\n    const count = 6;\n    const playerRoles = sampleSize(roles, count);\n    const newPlayers = playerRoles.map(role => ({\n      id: getId(),\n      name: fantastical.species.human(),\n      role,\n      statuses: [],\n      dead: false\n    }));\n    setPlayers(newPlayers);\n    setChanged(false);\n  }\n\n  function handleAddUserClick() {\n    setPlayers([\n      ...players,\n      {\n        id: getId(),\n        name: fantastical.species.human(),\n        role: null,\n        statuses: [],\n        dead: false\n      }\n    ]);\n  }\n\n  function handlePlayerChange(player) {\n    if (!changed) {\n      setChanged(true);\n    }\n    setPlayers(players.map(other => (other.id === player.id ? player : other)));\n  }\n\n  async function handlePlayerDelete(player) {\n    if (!changed) {\n      setChanged(true);\n    }\n    const confirmResult = await SA.fire({\n      title: 'Are you sure?',\n      text: `Delete player ${player.name}?`,\n      showCancelButton: true\n    });\n    if (!confirmResult.value) {\n      return;\n    }\n    setPlayers(players.filter(other => other.id !== player.id));\n  }\n\n  function handleNightClick() {\n    setShowNightHelper(true);\n  }\n\n  function handleViewRoleClick(player) {\n    setHelpRole(player.role);\n  }\n\n  function closeHelpDrawer() {\n    setHelpRole(null);\n    setShowNightHelper(false);\n  }\n\n  function renderHelpDrawer() {\n    if (!helpDrawerOpen) return <HelpDrawer open={false} />;\n\n    if (helpRole) {\n      return (\n        <HelpDrawer open>\n          <HelpDrawerCloseButton onClick={closeHelpDrawer}>\n            {'\\u00D7'}\n          </HelpDrawerCloseButton>\n          <RoleHelp role={helpRole} />\n        </HelpDrawer>\n      );\n    }\n\n    if (showNightHelper) {\n      return (\n        <HelpDrawer open>\n          <HelpDrawerCloseButton onClick={closeHelpDrawer}>\n            {'\\u00D7'}\n          </HelpDrawerCloseButton>\n          <NightHelperDrawer players={players} onClose={closeHelpDrawer} />\n        </HelpDrawer>\n      );\n    }\n  }\n\n  return (\n    <Root>\n      {renderHelpDrawer()}\n      {helpDrawerOpen && <HelpDrawerOverlay onClick={closeHelpDrawer} />}\n      <Header>\n        <BlockButton onClick={handleResetClick}>\n          <FaTrash size={36} />\n        </BlockButton>\n        <BlockButton onClick={handleRandomizeClick}>\n          <FaDice size={40} />\n        </BlockButton>\n        <BlockButton onClick={handleAddUserClick}>\n          <FaUserPlus size={40} />\n        </BlockButton>\n        <BlockButton disabled={!canUseNightHelper} onClick={handleNightClick}>\n          <FaMoon size={36} />\n        </BlockButton>\n      </Header>\n      <Content>\n        {players.map(player => (\n          <PlayerListItem\n            key={player.id}\n            player={player}\n            onPlayerChange={handlePlayerChange}\n            onPlayerDelete={handlePlayerDelete}\n            onRoleClick={handleViewRoleClick}\n          />\n        ))}\n      </Content>\n    </Root>\n  );\n}\n\nconst Root = styled(Column)`\n  height: 100vh;\n  background-color: #333;\n  color: white;\n  overflow: hidden;\n`;\n\nconst Header = styled(Row)`\n  border-bottom: 2px solid rgba(0, 0, 0, 0.5);\n  ${BlockButton} {\n    padding-top: 15px;\n    padding-bottom: 15px;\n    flex: 1;\n  }\n`;\n\nconst Content = styled(Column)`\n  flex: 1;\n  overflow: auto;\n  padding: 20px 0 20px 0;\n`;\n\nconst HelpDrawer = styled(Column)`\n  position: fixed;\n  left: 0;\n  top: 0;\n  padding: 0 20px 0 20px;\n  height: 100vh;\n  overflow: auto;\n  width: 80vw;\n  max-width: 450px;\n  background-color: #333;\n  box-shadow: 3px 10px rgba(0, 0, 0, 0.3);\n  z-index: 3;\n  transition: transform 0.4s;\n  transform: ${props =>\n    props.open ? `translate(0, 0)` : `translate(-100%, 0)`};\n\n  h1 {\n    text-align: center;\n  }\n`;\n\nconst HelpDrawerOverlay = styled('div')`\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: 2;\n  background-color: rgba(0, 0, 0, 0.3);\n  animation-duration: 0.4s;\n  animation-iteration-count: 1;\n  animation-fill-mode: forwards;\n  cursor: pointer;\n  animation-name: ${keyframes`\n    from {\n      opacity: 0;\n    } to {\n      opacity: 1;\n    }\n  `};\n`;\n\nconst HelpDrawerCloseButton = styled(BlockButton)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  font-size: 32px;\n  line-height: 30px;\n`;\n\nconst DarkBlockButton = styled(BlockButton)`\n  background-color: ${props => (props.highlighted ? '#559' : '#555')};\n  transition: background-color 0.2s;\n  padding-top: 10px;\n  padding-bottom: 10px;\n\n  &:active {\n    background-color: #222;\n  }\n`;\n\nfunction NightHelperDrawer({ players, onClose }) {\n  const [playerIndex, setPlayerIndex] = useState(0);\n  const sortedPlayers = players.sort(sortPlayersByRoleOrder);\n  const player = sortedPlayers[playerIndex];\n  const isLastPlayer = playerIndex >= players.length - 1;\n\n  function handleNextClick() {\n    setPlayerIndex(playerIndex + 1);\n  }\n\n  return (\n    <React.Fragment>\n      {player && <h1 style={{ paddingTop: 10 }}>Wake up {player.name}</h1>}\n      {player && player.role && <RoleHelp hideName role={player.role} />}\n      <div style={{ flex: 1 }} />\n      <DarkBlockButton\n        onClick={isLastPlayer ? onClose : handleNextClick}\n        highlighted={isLastPlayer}\n        style={{ marginBottom: 50 }}\n      >\n        {isLastPlayer ? 'End Night' : 'Next Player'}\n      </DarkBlockButton>\n    </React.Fragment>\n  );\n}\n\nfunction RoleHelp({ role, hideName }) {\n  return (\n    <React.Fragment>\n      {hideName ? '' : <h1 style={{ color: role.lightColor }}>{role.name}</h1>}\n      <h2>Alignment</h2>\n      <p style={{ color: getAlignmentColor(role.alignment) }}>\n        {role.alignment}\n      </p>\n      <h2>Ability</h2>\n      <p>{role.ability}</p>\n      <h2>Example</h2>\n      <p>{role.example}</p>\n    </React.Fragment>\n  );\n}\n\nfunction sortPlayersByRoleOrder(a, b) {\n  return roles.indexOf(a.role) - roles.indexOf(b.role);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}