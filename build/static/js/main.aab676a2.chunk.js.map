{"version":3,"sources":["components/Column.js","components/Row.js","components/BlockButton.js","roles.js","utils/getRoleById.js","utils/getAlignmentColor.js","components/PlayerListItem.js","utils/getRandomRoles.js","App.js","serviceWorker.js","index.js"],"names":["styled","_templateObject","Row_templateObject","BlockButton_templateObject","props","fade","disabled","isBaron","role","name","isTownsfolk","alignment","isNotTownsfolk","findRoleByName","roleNameMap","get","isRoleInArray","array","some","other","roles","ability","example","map","i","_ref","length","Object","objectSpread","id","lightColor","getLightColor","darkColor","getDarkColor","reduce","set","Map","townsfolkRoles","filter","outsiderRoles","minionRoles","demonRoles","roleOrder","index","concat","roleIdMap","getRoleById","roleId","getAlignmentColor","PlayerListItem","player","onPlayerChange","onPlayerDelete","onRoleClick","rest","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","status","setStatus","react_default","a","createElement","Root","assign","faded","dead","TopRow","NameInput","placeholder","value","onChange","event","currentTarget","RoleHelpButton","onClick","fa","size","color","RoleSelect","key","AlignmentLabel","SecondRow","StatusForm","onSubmit","preventDefault","trimmedStatus","trim","statuses","includes","toConsumableArray","StatusInput","StatusAddButton","DeathRow","DeadAliveButton","DeleteButton","StatusRow","StatusPill","getStatusColor","handleStatusClick","dark","Column","PlayerListItem_templateObject","Row","_templateObject2","_templateObject3","Input","_templateObject4","Select","_templateObject5","_templateObject6","_templateObject7","css","_templateObject8","BlockButton","_templateObject9","attrs","as","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","str","stringToHueCache","has","hash","charCodeAt","stringToHue","getRandomRoles","playerCount","playerRoles","sampleSize","townsfolk","nonTownsfolk","outsiders","townsfolkToRemove","remainingTownsfolk","shuffle","localStorageKey","initialState","initialStateString","localStorage","getItem","players","JSON","parse","error","console","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","find","_iterator","Symbol","iterator","next","done","err","return","loadInitialState","debouncedSaveState","debounce","state","setItem","stringify","App_templateObject","Header","App_templateObject2","Content","App_templateObject3","HelpDrawer","App_templateObject4","open","HelpDrawerOverlay","App_templateObject5","keyframes","App_templateObject6","HelpDrawerCloseButton","App_templateObject7","DarkBlockButton","App_templateObject8","highlighted","NightHelperDrawer","onClose","_useState9","_useState10","playerIndex","setPlayerIndex","sortedPlayers","sort","sortPlayersByRoleOrder","isLastPlayer","Fragment","style","paddingTop","RoleHelp","flex","marginBottom","_ref2","hideName","b","indexOf","Boolean","window","location","hostname","match","ReactDOM","render","setPlayers","_useState3","_useState4","changed","setChanged","_useState5","_useState6","helpRole","setHelpRole","_useState7","_useState8","showNightHelper","setShowNightHelper","helpDrawerOpen","canUseNightHelper","every","_handleResetClick","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","SA","fire","title","text","showCancelButton","sent","stop","apply","this","arguments","_handleRandomizeClick","_callee2","newPlayers","_context2","abrupt","handlePlayerChange","handlePlayerDelete","_x","_handlePlayerDelete","_callee3","_context3","handleViewRoleClick","closeHelpDrawer","useEffect","App_Root","nanoid","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ydAEeA,kBAAO,MAAPA,CAAfC,gKCAeD,kBAAO,MAAPA,CAAfE,kbCAeF,kBAAO,SAAPA,CAAfG,IAca,SAAAC,GAAK,OAAKA,EAAMC,MAAQD,EAAME,SAAW,GAAM,IChB/CC,EAAU,SAAAC,GAAI,MAAkB,UAAdA,EAAKC,MAGvBC,EAAc,SAAAF,GAAI,MAAuB,cAAnBA,EAAKG,WAC3BC,EAAiB,SAAAJ,GAAI,MAAuB,cAAnBA,EAAKG,WAW9BE,EAAiB,SAAAJ,GAAI,OAAIK,EAAYC,IAAIN,IACzCO,EAAgB,SAACC,EAAOT,GAAR,OAC3BS,EAAMC,KAAK,SAAAC,GAAK,OAAIA,GAASA,EAAMV,OAASD,EAAKC,QAE7CW,EAAQ,CACZ,CACEX,KAAM,cACNE,UAAW,YACXU,QACE,yEACFC,QACE,iFAEJ,CACEb,KAAM,YACNE,UAAW,YACXU,QACE,wEACFC,QACE,gFAEJ,CACEb,KAAM,eACNE,UAAW,YACXU,QACE,sEACFC,QACE,mFAEJ,CACEb,KAAM,OACNE,UAAW,YACXU,QACE,8EACFC,QACE,4EAEJ,CACEb,KAAM,SACNE,UAAW,YACXU,QACE,sEACFC,QACE,mFAEJ,CACEb,KAAM,iBACNE,UAAW,YACXU,QACE,6HACFC,QACE,gFAEJ,CACEb,KAAM,aACNE,UAAW,YACXU,QACE,0EACFC,QACE,+EAEJ,CACEb,KAAM,OACNE,UAAW,YACXU,QACE,8EACFC,QACE,2GAEJ,CACEb,KAAM,cACNE,UAAW,YACXU,QACE,wEACFC,QACE,mFAEJ,CACEb,KAAM,SACNE,UAAW,YACXU,QACE,8HACFC,QACE,kFAEJ,CACEb,KAAM,SACNE,UAAW,YACXU,QACE,8FACFC,QAAS,mDAEX,CACEb,KAAM,UACNE,UAAW,YACXU,QAAS,+BACTC,QAAS,oDAEX,CACEb,KAAM,QACNE,UAAW,YACXU,QACE,yHACFC,QACE,+EAEJ,CACEb,KAAM,SACNE,UAAW,WACXU,QACE,mFACFC,QACE,kHAEJ,CACEb,KAAM,QACNE,UAAW,WACXU,QACE,+FACFC,QACE,0HAEJ,CACEb,KAAM,UACNE,UAAW,WACXU,QAAS,4CACTC,QACE,qFAEJ,CACEb,KAAM,QACNE,UAAW,WACXU,QAAS,gDACTC,QACE,mHAEJ,CACEb,KAAM,WACNE,UAAW,SACXU,QACE,uFACFC,QACE,wHAEJ,CACEb,KAAM,MACNE,UAAW,SACXU,QACE,sGACFC,QACE,iIAEJ,CACEb,KAAM,gBACNE,UAAW,SACXU,QACE,sFACFC,QACE,mGAEJ,CACEb,KAAM,QACNE,UAAW,SACXU,QAAS,wCACTC,QACE,yHAEJ,CACEb,KAAM,MACNE,UAAW,QACXU,QACE,0GACFC,QACE,2EAEJC,IAAI,SAACf,EAAMgB,EAAPC,GAAA,IAAYC,EAAZD,EAAYC,OAAZ,OAAAC,OAAAC,EAAA,EAAAD,CAAA,CACJE,GAAIL,EAAI,EACRM,WAAYC,EAAcP,EAAGE,GAC7BM,UAAWC,EAAaT,EAAGE,IACxBlB,KAGCM,EAAcM,EAAMc,OAAO,SAACX,EAAKf,GAErC,OADAe,EAAIY,IAAI3B,EAAKC,KAAMD,GACZe,GACN,IAAIa,KAEQhB,IAEFiB,EAAiBjB,EAAMkB,OAAO5B,GAC9B6B,EAAgBnB,EAAMkB,OApMT,SAAA9B,GAAI,MAAuB,aAAnBA,EAAKG,YAqM1B6B,EAAcpB,EAAMkB,OAxMT,SAAA9B,GAAI,MAAuB,WAAnBA,EAAKG,YAyMxB8B,EAAarB,EAAMkB,OAnMT,SAAA9B,GAAI,MAAuB,UAAnBA,EAAKG,YAqMvB+B,EAAY,CACvB7B,EAAe,YACfA,EAAe,QACfA,EAAe,cACfA,EAAe,UACfA,EAAe,kBACfA,EAAe,OACfA,EAAe,OACfA,EAAe,gBAGjB,SAASkB,EAAcY,EAAOjB,GAI5B,aAAAkB,OAHa,IAAMD,EAASjB,EAG5B,KAAAkB,OAFY,GAEZ,MAAAA,OADY,GACZ,MAGF,SAASX,EAAaU,EAAOjB,GAI3B,aAAAkB,OAHa,IAAMD,EAASjB,EAG5B,KAAAkB,OAFY,GAEZ,MAAAA,OADY,GACZ,kBCrOIC,EAAYzB,EAAMc,OAAO,SAACX,EAAKf,GAEnC,OADAe,EAAIY,IAAI3B,EAAKqB,GAAIrB,GACVe,GACN,IAAIa,KAEQ,SAASU,EAAYC,GAClC,OAAOF,EAAU9B,KAAKgC,GCDT,SAASC,EAAkBrC,GACxC,MAAkB,UAAdA,GAAuC,WAAdA,EACpB,OAEF,2sFCDM,SAASsC,GAAe7C,GAAO,IAE1C8C,EAKE9C,EALF8C,OACAC,EAIE/C,EAJF+C,eACAC,EAGEhD,EAHFgD,eACAC,EAEEjD,EAFFiD,YACGC,EANuC3B,OAAA4B,EAAA,EAAA5B,CAOxCvB,EAPwC,4DAAAoD,EAQhBC,mBAAS,IAROC,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAA6B,EAAA,GAQrCI,EARqCF,EAAA,GAQ7BG,EAR6BH,EAAA,GAyD5C,OACEI,EAAAC,EAAAC,cAACC,GAADtC,OAAAuC,OAAA,GAAUZ,EAAV,CAAgBa,MAAOjB,EAAOkB,OAC5BN,EAAAC,EAAAC,cAACK,GAAD,KACEP,EAAAC,EAAAC,cAACM,GAAD,CACEC,YAAY,OACZC,MAAOtB,EAAOzC,MAAQ,GACtBgE,SArDR,SAA0BC,GACxBvB,EAAexB,OAAAC,EAAA,EAAAD,CAAA,GAAKuB,EAAN,CAAczC,KAAMiE,EAAMC,cAAcH,YAsDlDV,EAAAC,EAAAC,cAACY,GAAD,CACEtE,UAAW4C,EAAO1C,KAClBqE,QAAS,kBAAMxB,EAAYH,KAE3BY,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEC,KAAM,GACNC,MAAO9B,EAAO1C,KAAO,QAAU,2BAGnCsD,EAAAC,EAAAC,cAACiB,GAAD,CACET,MAAOtB,EAAO1C,KAAO0C,EAAO1C,KAAKqB,GAAK,GACtC4C,SA9DR,SAA0BC,GACxBvB,EAAexB,OAAAC,EAAA,EAAAD,CAAA,GACVuB,EADS,CAEZ1C,KAAMsC,EAAY4B,EAAMC,cAAcH,YA6DlCV,EAAAC,EAAAC,cAAA,UAAQ1D,UAAQ,EAACkE,MAAM,IAAvB,QAGCpD,EAAMG,IAAI,SAAAf,GAAI,OACbsD,EAAAC,EAAAC,cAAA,UAAQkB,IAAK1E,EAAKqB,GAAI2C,MAAOhE,EAAKqB,IAC/BrB,EAAKC,SAIXyC,EAAO1C,MACNsD,EAAAC,EAAAC,cAACmB,GAAD,CAAgBH,MAAOhC,EAAkBE,EAAO1C,KAAKG,YAClDuC,EAAO1C,KAAKG,YAKnBmD,EAAAC,EAAAC,cAACoB,GAAD,KACEtB,EAAAC,EAAAC,cAACqB,GAAD,CAAYC,SAtElB,SAAgCZ,GAC9BA,EAAMa,iBACN,IAAMC,EAAgB5B,EAAO6B,OAGxBD,EAAc9D,SAKfwB,EAAOwC,SAASC,SAASH,KAI7BrC,EAAexB,OAAAC,EAAA,EAAAD,CAAA,GACVuB,EADS,CAEZwC,SAAQ,GAAA9C,OAAAjB,OAAAiE,EAAA,EAAAjE,CAAMuB,EAAOwC,UAAb,CAAuBF,OAEjC3B,EAAU,QAqDJC,EAAAC,EAAAC,cAAC6B,GAAD,CACEtB,YAAY,SACZC,MAAOZ,EACPa,SA9EV,SAA4BC,GAC1Bb,EAAUa,EAAMC,cAAcH,UA+ExBV,EAAAC,EAAAC,cAAC8B,GAAD,KACEhC,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQE,MAAM,WAGlBlB,EAAAC,EAAAC,cAAC+B,GAAD,KACEjC,EAAAC,EAAAC,cAACgC,GAAD,CAAiB5B,KAAMlB,EAAOkB,KAAMS,QA5D5C,WACE1B,EAAexB,OAAAC,EAAA,EAAAD,CAAA,GAAKuB,EAAN,CAAckB,MAAOlB,EAAOkB,UA4DjClB,EAAOkB,KAAO,OAAS,SAE1BN,EAAAC,EAAAC,cAACiC,GAAD,CAAcpB,QAAS,kBAAMzB,EAAeF,KAC1CY,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASC,KAAM,QAKrBjB,EAAAC,EAAAC,cAACkC,GAAD,KACGhD,EAAOwC,SAASnE,IAAI,SAACqC,EAAQpC,GAAT,OACnBsC,EAAAC,EAAAC,cAACmC,GAAD,CACEjB,IAAK1D,EACLwD,MAAOoB,GAAexC,GACtBiB,QAAS,kBAtEnB,SAA2BjB,GACzBT,EAAexB,OAAAC,EAAA,EAAAD,CAAA,GACVuB,EADS,CAEZwC,SAAUxC,EAAOwC,SAASpD,OAAO,SAAAnB,GAAK,OAAIA,IAAUyC,OAmE/ByC,CAAkBzC,KAEhCA,EACDE,EAAAC,EAAAC,cAAA,YAAO,aDrInBhB,EAAkBsD,KAAO,SAAA3F,GACvB,MAAkB,UAAdA,GAAuC,WAAdA,EACpB,OAEF,QCyIT,IAAMsD,GAAOjE,YAAOuG,EAAPvG,CAAHwG,KAIG,SAAApG,GAAK,OAAKA,EAAM+D,MAAQ,GAAM,IAIrCE,GAASrE,YAAOyG,EAAPzG,CAAH0G,MAWNtB,GAAYpF,YAAOyG,EAAPzG,CAAH2G,MAITC,GAAQ5G,YAAO,QAAPA,CAAH6G,MASLC,GAAS9G,YAAO,SAAPA,CAAH+G,MAKNzC,GAAYtE,YAAO4G,GAAP5G,CAAHgH,MAIT/B,GAAajF,YAAO8G,GAAP9G,CAAHiH,KAMZ,SAAA7G,GACA,IAAMI,EAAOJ,EAAMoE,OAAS1B,EAAY1C,EAAMoE,OAC9C,OAAKhE,EAGE0G,YAAPC,KAEsBnE,EAAkBsD,KAAK9F,EAAKG,YAJzC,KASPiE,GAAiB5E,YAAOoH,EAAPpH,CAAHqH,MAIdhC,GAAarF,YAAOyG,GAAKa,MAAM,CAAEC,GAAI,QAAxBvH,CAAHwH,MAKV1B,GAAkB9F,YAAOoH,EAAPpH,CAAHyH,MAQf5B,GAAc7F,YAAO4G,GAAP5G,CAAH0H,KAIX1B,GAAkBhG,YAAOoH,EAAPpH,CAAH2H,IAGC,SAAAvH,GAAK,OAAKA,EAAMgE,KAAO,OAAS,SAMhD8B,GAAYlG,YAAOyG,EAAPzG,CAAH4H,KAITzB,GAAanG,YAAOoH,EAAPpH,CAAH6H,IAQL,SAAAzH,GAAK,OAAIA,EAAM4E,QAMpBG,GAAiBnF,YAAOyG,EAAPzG,CAAH8H,IAMT,SAAA1H,GAAK,OAAIA,EAAM4E,QAGpBiB,GAAejG,YAAOoH,EAAPpH,CAAH+H,KAKZhC,GAAW/F,YAAOyG,EAAPzG,CAAHgI,KAKd,SAAS5B,GAAexC,GACtB,aAAAhB,OAKF,SAAqBqF,GACnB,IAAKC,GAAiBC,IAAIF,GAAM,KACtBvG,EAAWuG,EAAXvG,OACJ0G,EAAO,EACX,GAAe,IAAX1G,EAAc,CAChB,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAC1B4G,EAAOH,EAAII,WAAW7G,KAAO4G,GAAQ,GAAKA,GAC1CA,GAAcA,EAEhBA,GAAc,IAGhB,OADAF,GAAiB/F,IAAI8F,EAAKG,GACnBA,EAET,OAAOF,GAAiBnH,IAAIkH,GAnBdK,CAAY1E,GAA1B,eAIF,IAAMsE,GAAmB,IAAI9F,+CCnQd,SAASmG,GAAeC,GACrC,IAAIC,EAEJ,OAAQD,GACN,KAAK,EACHC,EAAW,GAAA7F,OAAAjB,OAAAiE,EAAA,EAAAjE,CACN+G,KAAWrG,EAAgB,IADrBV,OAAAiE,EAAA,EAAAjE,CAEN+G,KAAWnG,EAAe,IAFpBZ,OAAAiE,EAAA,EAAAjE,CAGN+G,KAAWlG,EAAa,IAHlBb,OAAAiE,EAAA,EAAAjE,CAIN+G,KAAWjG,EAAY,KAE5B,MACF,KAAK,EACHgG,EAAW,GAAA7F,OAAAjB,OAAAiE,EAAA,EAAAjE,CACN+G,KAAWrG,EAAgB,IADrBV,OAAAiE,EAAA,EAAAjE,CAEN+G,KAAWnG,EAAe,IAFpBZ,OAAAiE,EAAA,EAAAjE,CAGN+G,KAAWlG,EAAa,IAHlBb,OAAAiE,EAAA,EAAAjE,CAIN+G,KAAWjG,EAAY,KAE5B,MACF,KAAK,EACHgG,EAAW,GAAA7F,OAAAjB,OAAAiE,EAAA,EAAAjE,CACN+G,KAAWrG,EAAgB,IADrBV,OAAAiE,EAAA,EAAAjE,CAEN+G,KAAWnG,EAAe,IAFpBZ,OAAAiE,EAAA,EAAAjE,CAGN+G,KAAWlG,EAAa,IAHlBb,OAAAiE,EAAA,EAAAjE,CAIN+G,KAAWjG,EAAY,KAE5B,MACF,KAAK,EACHgG,EAAW,GAAA7F,OAAAjB,OAAAiE,EAAA,EAAAjE,CACN+G,KAAWrG,EAAgB,IADrBV,OAAAiE,EAAA,EAAAjE,CAEN+G,KAAWnG,EAAe,IAFpBZ,OAAAiE,EAAA,EAAAjE,CAGN+G,KAAWlG,EAAa,IAHlBb,OAAAiE,EAAA,EAAAjE,CAIN+G,KAAWjG,EAAY,KAE5B,MACF,KAAK,EACHgG,EAAW,GAAA7F,OAAAjB,OAAAiE,EAAA,EAAAjE,CACN+G,KAAWrG,EAAgB,IADrBV,OAAAiE,EAAA,EAAAjE,CAEN+G,KAAWnG,EAAe,IAFpBZ,OAAAiE,EAAA,EAAAjE,CAGN+G,KAAWlG,EAAa,IAHlBb,OAAAiE,EAAA,EAAAjE,CAIN+G,KAAWjG,EAAY,KAE5B,MACF,KAAK,GACHgG,EAAW,GAAA7F,OAAAjB,OAAAiE,EAAA,EAAAjE,CACN+G,KAAWrG,EAAgB,IADrBV,OAAAiE,EAAA,EAAAjE,CAEN+G,KAAWnG,EAAe,IAFpBZ,OAAAiE,EAAA,EAAAjE,CAGN+G,KAAWlG,EAAa,IAHlBb,OAAAiE,EAAA,EAAAjE,CAIN+G,KAAWjG,EAAY,KAE5B,MACF,KAAK,GACHgG,EAAW,GAAA7F,OAAAjB,OAAAiE,EAAA,EAAAjE,CACN+G,KAAWrG,EAAgB,IADrBV,OAAAiE,EAAA,EAAAjE,CAEN+G,KAAWnG,EAAe,IAFpBZ,OAAAiE,EAAA,EAAAjE,CAGN+G,KAAWlG,EAAa,IAHlBb,OAAAiE,EAAA,EAAAjE,CAIN+G,KAAWjG,EAAY,KAE5B,MACF,KAAK,GACHgG,EAAW,GAAA7F,OAAAjB,OAAAiE,EAAA,EAAAjE,CACN+G,KAAWrG,EAAgB,IADrBV,OAAAiE,EAAA,EAAAjE,CAEN+G,KAAWnG,EAAe,IAFpBZ,OAAAiE,EAAA,EAAAjE,CAGN+G,KAAWlG,EAAa,IAHlBb,OAAAiE,EAAA,EAAAjE,CAIN+G,KAAWjG,EAAY,KAE5B,MACF,KAAK,GACHgG,EAAW,GAAA7F,OAAAjB,OAAAiE,EAAA,EAAAjE,CACN+G,KAAWrG,EAAgB,IADrBV,OAAAiE,EAAA,EAAAjE,CAEN+G,KAAWnG,EAAe,IAFpBZ,OAAAiE,EAAA,EAAAjE,CAGN+G,KAAWlG,EAAa,IAHlBb,OAAAiE,EAAA,EAAAjE,CAIN+G,KAAWjG,EAAY,KAE5B,MACF,KAAK,GACHgG,EAAW,GAAA7F,OAAAjB,OAAAiE,EAAA,EAAAjE,CACN+G,KAAWrG,EAAgB,IADrBV,OAAAiE,EAAA,EAAAjE,CAEN+G,KAAWnG,EAAe,IAFpBZ,OAAAiE,EAAA,EAAAjE,CAGN+G,KAAWlG,EAAa,IAHlBb,OAAAiE,EAAA,EAAAjE,CAIN+G,KAAWjG,EAAY,KAE5B,MACF,KAAK,GAQL,QACEgG,EAAW,GAAA7F,OAAAjB,OAAAiE,EAAA,EAAAjE,CACN+G,KAAWrG,EAAgB,IADrBV,OAAAiE,EAAA,EAAAjE,CAEN+G,KAAWnG,EAAe,IAFpBZ,OAAAiE,EAAA,EAAAjE,CAGN+G,KAAWlG,EAAa,IAHlBb,OAAAiE,EAAA,EAAAjE,CAIN+G,KAAWjG,EAAY,KAMhC,GAAIgG,EAAYvH,KAAKX,GAAU,CAC7B,IAAMoI,EAAYF,EAAYnG,OAAO5B,GAC/BkI,EAAeH,EAAYnG,OAAO1B,GAGlCiI,EAAYH,KAEhBnG,EAAcD,OAAO,SAAA9B,GAAI,OAAKQ,EAAc4H,EAAcpI,KAC1D,GAIIsI,EAAoBJ,KAAWC,EAAW,GAG1CI,EAAqBJ,EAAUrG,OACnC,SAAA9B,GAAI,OAAKQ,EAAc8H,EAAmBtI,KAI5CiI,EAAW,GAAA7F,OAAAjB,OAAAiE,EAAA,EAAAjE,CAAOoH,GAAPpH,OAAAiE,EAAA,EAAAjE,CAA8BkH,GAA9BlH,OAAAiE,EAAA,EAAAjE,CAA4CiH,IAGzD,OAAOI,KAAQP,wxDC7HjB,IAAMQ,GAAkB,iBAClBC,GAEN,WACE,IAAMC,EAAqBC,aAAaC,QAAQJ,IAC5CC,EAAe,CAAEI,QAAS,IAE9B,IACE3H,OAAOuC,OAAOgF,EAAcK,KAAKC,MAAML,IACvC,MAAOM,GACPC,QAAQD,MAAM,uBAAwBA,GAPd,IAAAE,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAU1B,IAV0B,IAU1BC,EAV0BC,EAAA,eAUf9G,EAVe6G,EAAAvF,MAWpBtB,EAAO1C,OACT0C,EAAO1C,KAAOY,EAAM6I,KAAK,SAAC9I,GAAD,OAAWA,EAAMU,KAAOqB,EAAO1C,KAAKqB,OAFjEqI,EAAqBhB,EAAaI,QAAlCa,OAAAC,cAAAT,GAAAI,EAAAG,EAAAG,QAAAC,MAAAX,GAAA,EAA2CK,IAVjB,MAAAO,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAO,EAAAM,QAAAN,EAAAM,SAAA,WAAAZ,EAAA,MAAAC,GAgB1B,OAAOX,EAlBYuB,GAyBrB,IAAMC,GAAqBC,IAJ3B,SAAmBC,GACjBxB,aAAayB,QAAQ5B,GAAiBM,KAAKuB,UAAUF,KAGR,KAmK/C,IAAM3G,GAAOjE,YAAOuG,EAAPvG,CAAH+K,MAOJC,GAAShL,YAAOyG,EAAPzG,CAAHiL,KAER7D,GAOE8D,GAAUlL,YAAOuG,EAAPvG,CAAHmL,MAMPC,GAAapL,YAAOuG,EAAPvG,CAAHqL,KAaD,SAACjL,GAAD,OACXA,EAAMkL,KAAN,0CAOEC,GAAoBvL,YAAO,MAAPA,CAAHwL,KAYHC,YAZGC,OAqBjBC,GAAwB3L,YAAOoH,EAAPpH,CAAH4L,MAWrBC,GAAkB7L,YAAOoH,EAAPpH,CAAH8L,KACC,SAAC1L,GAAD,OAAYA,EAAM2L,YAAc,OAAS,SAU/D,SAASC,GAATvK,GAAiD,IAApB6H,EAAoB7H,EAApB6H,QAAS2C,EAAWxK,EAAXwK,QAAWC,EACTzI,mBAAS,GADA0I,EAAAxK,OAAAgC,EAAA,EAAAhC,CAAAuK,EAAA,GACxCE,EADwCD,EAAA,GAC3BE,EAD2BF,EAAA,GAEzCG,EAAgBhD,EACnBhH,OAAO,SAACY,GAAD,OAAaA,EAAOkB,MAAQ1B,EAAUiD,SAASzC,EAAO1C,QAC7D+L,KAAKC,IACFtJ,EAASoJ,EAAcF,GACvBK,EAAeL,GAAeE,EAAc5K,OAAS,EAM3D,OACEoC,EAAAC,EAAAC,cAACF,EAAAC,EAAM2I,SAAP,KACGxJ,GAAUY,EAAAC,EAAAC,cAAA,MAAI2I,MAAO,CAAEC,WAAY,KAAzB,WAAwC1J,EAAOzC,MACzDyC,GAAUA,EAAO1C,MAAQsD,EAAAC,EAAAC,cAAC6I,GAAD,CAAUrM,KAAM0C,EAAO1C,OACjDsD,EAAAC,EAAAC,cAAA,OAAK2I,MAAO,CAAEG,KAAM,KACpBhJ,EAAAC,EAAAC,cAAC6H,GAAD,CACEhH,QAAS4H,EAAeR,EAV9B,WACEI,EAAeD,EAAc,IAUzBL,YAAaU,EACbE,MAAO,CAAEI,aAAc,KAEtBN,EAAe,YAAc,gBAMtC,SAASI,GAATG,GAAsC,IAAlBxM,EAAkBwM,EAAlBxM,KAAMyM,EAAYD,EAAZC,SACxB,OACEnJ,EAAAC,EAAAC,cAACF,EAAAC,EAAM2I,SAAP,KACGO,EAAW,GAAKnJ,EAAAC,EAAAC,cAAA,MAAI2I,MAAO,CAAE3H,MAAOxE,EAAKsB,aAAetB,EAAKC,MAC9DqD,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,KAAG2I,MAAO,CAAE3H,MAAOhC,EAAkBxC,EAAKG,aACvCH,EAAKG,WAERmD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAIxD,EAAKa,SACTyC,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAIxD,EAAKc,UAKf,SAASkL,GAAuBzI,EAAGmJ,GACjC,OAAOxK,EAAUyK,QAAQpJ,EAAEvD,MAAQkC,EAAUyK,QAAQD,EAAE1M,MClUrC4M,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5J,EAAAC,EAAAC,cFoCD,WAAe,IAAAR,EACEC,mBAASyF,GAAaI,SAAW,IADnC5F,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAA6B,EAAA,GACrB8F,EADqB5F,EAAA,GACZiK,EADYjK,EAAA,GAAAkK,EAEEnK,oBAAS,GAFXoK,EAAAlM,OAAAgC,EAAA,EAAAhC,CAAAiM,EAAA,GAErBE,EAFqBD,EAAA,GAEZE,EAFYF,EAAA,GAAAG,EAGIvK,mBAAS,MAHbwK,EAAAtM,OAAAgC,EAAA,EAAAhC,CAAAqM,EAAA,GAGrBE,EAHqBD,EAAA,GAGXE,EAHWF,EAAA,GAAAG,EAIkB3K,oBAAS,GAJ3B4K,EAAA1M,OAAAgC,EAAA,EAAAhC,CAAAyM,EAAA,GAIrBE,EAJqBD,EAAA,GAIJE,EAJIF,EAAA,GAMtBG,IAAmBN,GAAYI,EAC/BG,EACJnF,EAAQ5H,OAAS,GACjB4H,EAAQoF,MAAM,SAACxL,GACb,SAAUA,EAAO1C,MAAQ0C,EAAOzC,KAAKiB,OAAS,KAVtB,SAAAiN,IAAA,OAAAA,EAAAhN,OAAAiN,EAAA,EAAAjN,CAAAkN,EAAA9K,EAAA+K,KAiB5B,SAAAC,IAAA,OAAAF,EAAA9K,EAAAiL,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA5E,MAAA,cAAA4E,EAAA5E,KAAA,EAC8B8E,IAAGC,KAAK,CAClCC,MAAO,gBACPC,KAAM,gCACNC,kBAAkB,IAJtB,OAAAN,EAAAO,KAOoBhL,QAChBmJ,EAAW,IACXI,GAAW,IATf,wBAAAkB,EAAAQ,SAAAV,OAjB4BW,MAAAC,KAAAC,WAAA,SAAAC,IAAA,OAAAA,EAAAlO,OAAAiN,EAAA,EAAAjN,CAAAkN,EAAA9K,EAAA+K,KA8B5B,SAAAgB,IAAA,IAAArH,EAAAsH,EAAA,OAAAlB,EAAA9K,EAAAiL,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAA3F,MAAA,WACMyD,EADN,CAAAkC,EAAA3F,KAAA,eAAA2F,EAAA3F,KAAA,EAEgC8E,IAAGC,KAAK,CAClCC,MAAO,gBACPC,KAAM,oCACNC,kBAAkB,IALxB,UAAAS,EAAAR,KAOuBhL,MAPvB,CAAAwL,EAAA3F,KAAA,eAAA2F,EAAAC,OAAA,iBAYQxH,EAAcF,GAAee,EAAQ5H,QACrCqO,EAAazG,EAAQ/H,IAAI,SAAC2B,EAAQ1B,GAAT,OAAAG,OAAAC,EAAA,EAAAD,CAAA,GAC1BuB,EAD0B,CAE7B1C,KAAMiI,EAAYjH,GAClB4C,MAAM,EACNsB,SAAU,OAGZiI,EAAWoC,GACXhC,GAAW,GArBb,yBAAAiC,EAAAP,SAAAK,OA9B4BJ,MAAAC,KAAAC,WAmE5B,SAASM,EAAmBhN,GAC1B6K,GAAW,GACXJ,EACErE,EAAQ/H,IAAI,SAACJ,GAAD,OAAYA,EAAMU,KAAOqB,EAAOrB,GAAKqB,EAAS/B,KAtElC,SA0EbgP,EA1EaC,GAAA,OAAAC,EAAAX,MAAAC,KAAAC,WAAA,SAAAS,IAAA,OAAAA,EAAA1O,OAAAiN,EAAA,EAAAjN,CAAAkN,EAAA9K,EAAA+K,KA0E5B,SAAAwB,EAAkCpN,GAAlC,OAAA2L,EAAA9K,EAAAiL,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAAlG,MAAA,cACOyD,GACHC,GAAW,GAFfwC,EAAAlG,KAAA,EAI8B8E,IAAGC,KAAK,CAClCC,MAAO,gBACPC,KAAI,iBAAA1M,OAAmBM,EAAOzC,KAA1B,KACJ8O,kBAAkB,IAPtB,UAAAgB,EAAAf,KASqBhL,MATrB,CAAA+L,EAAAlG,KAAA,eAAAkG,EAAAN,OAAA,iBAYEtC,EAAWrE,EAAQhH,OAAO,SAACnB,GAAD,OAAWA,EAAMU,KAAOqB,EAAOrB,MAZ3D,wBAAA0O,EAAAd,SAAAa,OA1E4BZ,MAAAC,KAAAC,WA6F5B,SAASY,EAAoBtN,GAC3BiL,EAAYjL,EAAO1C,MAGrB,SAASiQ,IACPtC,EAAY,MACZI,GAAmB,GA6BrB,OAnHAmC,oBAAU,WACRhG,GAAmB,CAAEpB,aACpB,CAACA,IAkHFxF,EAAAC,EAAAC,cAAC2M,GAAD,KA1BKnC,EAEDN,EAEApK,EAAAC,EAAAC,cAACoH,GAAD,CAAYE,MAAI,GACdxH,EAAAC,EAAAC,cAAC2H,GAAD,CAAuB9G,QAAS4L,GAC7B,QAEH3M,EAAAC,EAAAC,cAAC6I,GAAD,CAAUrM,KAAM0N,KAKlBI,EAEAxK,EAAAC,EAAAC,cAACoH,GAAD,CAAYE,MAAI,GACdxH,EAAAC,EAAAC,cAAC2H,GAAD,CAAuB9G,QAAS4L,GAC7B,QAEH3M,EAAAC,EAAAC,cAACgI,GAAD,CAAmB1C,QAASA,EAAS2C,QAASwE,UANpD,EAb4B3M,EAAAC,EAAAC,cAACoH,GAAD,CAAYE,MAAM,IA4B3CkD,GAAkB1K,EAAAC,EAAAC,cAACuH,GAAD,CAAmB1G,QAAS4L,IAC/C3M,EAAAC,EAAAC,cAACgH,GAAD,KACElH,EAAAC,EAAAC,cAACoD,EAAD,CAAavC,QArIS,kBAAA8J,EAAAe,MAAAC,KAAAC,aAsIpB9L,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASC,KAAM,MAEjBjB,EAAAC,EAAAC,cAACoD,EAAD,CAAavC,QAxIS,kBAAAgL,EAAAH,MAAAC,KAAAC,aAyIpB9L,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQC,KAAM,MAEhBjB,EAAAC,EAAAC,cAACoD,EAAD,CAAavC,QArFnB,WACE8I,EAAU,GAAA/K,OAAAjB,OAAAiE,EAAA,EAAAjE,CACL2H,GADK,CAER,CACEzH,GAAI+O,MACJnQ,KAAM,GACND,KAAM,KACNkF,SAAU,GACVtB,MAAM,QA8EJN,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYC,KAAM,MAEpBjB,EAAAC,EAAAC,cAACoD,EAAD,CAAa9G,UAAWmO,EAAmB5J,QArDjD,WACE0J,GAAmB,KAqDbzK,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQC,KAAM,OAGlBjB,EAAAC,EAAAC,cAACkH,GAAD,KACG5B,EAAQ/H,IAAI,SAAC2B,GAAD,OACXY,EAAAC,EAAAC,cAACf,GAAD,CACEiC,IAAKhC,EAAOrB,GACZqB,OAAQA,EACRC,eAAgB+M,EAChB9M,eAAgB+M,EAChB9M,YAAamN,SE7LT,MAASK,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.aab676a2.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled('div')`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n`;\n","import styled from 'styled-components';\n\nexport default styled('div')`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  flex-shrink: 0;\n`;\n","import styled from 'styled-components';\n\nexport default styled('button')`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  outline: none;\n  border: none;\n  width: auto;\n  background-color: inherit;\n  color: inherit;\n  padding: 5px 20px 5px 20px;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: inherit;\n  opacity: ${props => (props.fade || props.disabled ? 0.5 : 1)};\n  transition: opacity 0.2s;\n  flex-shrink: 0;\n`;\n","export const isBaron = role => role.name === 'Baron';\nexport const isNotBaron = role => role.name !== 'Baron';\n\nexport const isTownsfolk = role => role.alignment === 'Townsfolk';\nexport const isNotTownsfolk = role => role.alignment !== 'Townsfolk';\n\nexport const isMinion = role => role.alignment === 'Minion';\nexport const isNotMinion = role => role.alignment !== 'Minion';\n\nexport const isOutsider = role => role.alignment === 'Outsider';\nexport const isNotOutsider = role => role.alignment !== 'Outsider';\n\nexport const isDemon = role => role.alignment === 'Demon';\nexport const isNotDemon = role => role.alignment !== 'Demon';\n\nexport const findRoleByName = name => roleNameMap.get(name);\nexport const isRoleInArray = (array, role) =>\n  array.some(other => other && other.name === role.name);\n\nconst roles = [\n  {\n    name: 'Washerwoman',\n    alignment: 'Townsfolk',\n    ability:\n      'You start knowing that 1 of 2 players are a particular townsfolk role.',\n    example:\n      'The Washerwoman wakes up and learns that either Evan or Rachael are the Chef.'\n  },\n  {\n    name: 'Librarian',\n    alignment: 'Townsfolk',\n    ability:\n      'You start knowing that 1 of 2 players are a particular outsider role.',\n    example:\n      'The Librarian wakes up and learns that either Evan or Rachael are the Saint.'\n  },\n  {\n    name: 'Investigator',\n    alignment: 'Townsfolk',\n    ability:\n      'You start knowing that 1 of 2 players are a particular minion role.',\n    example:\n      'The Investigator wakes up and learns that either Evan or Rachael are the Baron.'\n  },\n  {\n    name: 'Chef',\n    alignment: 'Townsfolk',\n    ability:\n      'You start knowing how many pairs of evil players are sat next to eachother.',\n    example:\n      'The Demon is sitting next to the Baron. The chef wakes up and hears \"1\".'\n  },\n  {\n    name: 'Empath',\n    alignment: 'Townsfolk',\n    ability:\n      'Each night you are told how many of your living neighbors are Evil.',\n    example:\n      'The Empath is sitting next to the Gunslinger and the Librarian. They hear \"1\". '\n  },\n  {\n    name: 'Fortune Teller',\n    alignment: 'Townsfolk',\n    ability:\n      'Each night choose 2 players and learn if one of them is the Demon. There is one good player that registers falsely to you.',\n    example:\n      'The Fortune Teller chooses the Demon and the Librarian and receives a \"Yes\".'\n  },\n  {\n    name: 'Undertaker',\n    alignment: 'Townsfolk',\n    ability:\n      'Each night, you learn the role of the person who was executed that day.',\n    example:\n      'The Mayor is executed. That night, the Undertaker is shown the Mayor token.'\n  },\n  {\n    name: 'Monk',\n    alignment: 'Townsfolk',\n    ability:\n      'Each night, choose another player. They are safe from the Demon that night.',\n    example:\n      'The Monk chooses the Fortune Teller. The Demon attacks the Fortune Teller. The Fortune Teller survives.'\n  },\n  {\n    name: 'Ravenkeeper',\n    alignment: 'Townsfolk',\n    ability:\n      'If you are killed at night, you may learn the role of another player.',\n    example:\n      'The Demon kills the Ravenkeeper. They choose Ethan, and learn he is the Empath.'\n  },\n  {\n    name: 'Virgin',\n    alignment: 'Townsfolk',\n    ability:\n      'The first time you are nominated for execution, if the person nominating you is a Townsfolk, they are executed immediately.',\n    example:\n      'The Washerwoman nominates the Virgin. The Washerwoman is immediately executed.'\n  },\n  {\n    name: 'Slayer',\n    alignment: 'Townsfolk',\n    ability:\n      'Once per game, during the day, publicly nominate a player. If they are the Demon, they die.',\n    example: 'The Slayer chooses the Imp, the Good team wins.'\n  },\n  {\n    name: 'Soldier',\n    alignment: 'Townsfolk',\n    ability: 'You are safe from the Demon.',\n    example: 'The Demon attacks the Soldier, who does not die.'\n  },\n  {\n    name: 'Mayor',\n    alignment: 'Townsfolk',\n    ability:\n      'If only 3 players are alive, and no execution happens, you win. If you die at night, another player might die instead.',\n    example:\n      'There are three players alive and no executions happen. The Good team wins.'\n  },\n  {\n    name: 'Butler',\n    alignment: 'Outsider',\n    ability:\n      'Each night, choose another player. During the day, you may only vote if they do.',\n    example:\n      'The Butler choose Ethan at night. During the day, Ethan decides not to vote, so the Butler cannot vote either.'\n  },\n  {\n    name: 'Drunk',\n    alignment: 'Outsider',\n    ability:\n      'You do not know you are the Drunk. You think you are a Townsfolk, but your ability misfires.',\n    example:\n      'The Drunk thinks they are the Empath. They wake up and get a \"0\", even though they are sitting next to an Evil player.'\n  },\n  {\n    name: 'Recluse',\n    alignment: 'Outsider',\n    ability: 'You might register as Evil, even if dead.',\n    example:\n      'The Recluse is killed. That night, the Undertaker is told that they were the Imp.'\n  },\n  {\n    name: 'Saint',\n    alignment: 'Outsider',\n    ability: 'If you die by execution, the Good team loses.',\n    example:\n      'The Saint is nominated and receives enough votes to be executed. They die, and the game ends with Evil winning.'\n  },\n  {\n    name: 'Poisoner',\n    alignment: 'Minion',\n    ability:\n      'At night, choose a player: Their ability malfunctions that night and during the day.',\n    example:\n      'The Investigator is poisoned. They learn that either Evan or Rachael are the Baron, even though neither of them are.'\n  },\n  {\n    name: 'Spy',\n    alignment: 'Minion',\n    ability:\n      'You might register as a Townsfolk or Outsider, even while dead. At night, you may see the Grimoire.',\n    example:\n      'The Washerwoman learns that either Ethan or Rachael is the Ravenkeeper, even though Ethan is the Monk and Rachael is the Spy.'\n  },\n  {\n    name: 'Scarlet Woman',\n    alignment: 'Minion',\n    ability:\n      'If there are 5 or more players left alive and the Demon dies, you become the Demon.',\n    example:\n      'The Imp is executed, however there are 5 players left alive. The Scarlet Woman becomes the Imp.'\n  },\n  {\n    name: 'Baron',\n    alignment: 'Minion',\n    ability: 'There are two more Outsiders in play.',\n    example:\n      'At the start of the game, if the Baron is in play, remove two Townsfolk tokens and replace them with Outsider tokens.'\n  },\n  {\n    name: 'Imp',\n    alignment: 'Demon',\n    ability:\n      'At night choose a player and they die. If you choose yourself, one of your Minions becomes the new Imp.',\n    example:\n      'The Imp chooses to kill Ethan during the night, who was an Undertaker.'\n  }\n].map((role, i, { length }) => ({\n  id: i + 1,\n  lightColor: getLightColor(i, length),\n  darkColor: getDarkColor(i, length),\n  ...role\n}));\n\nconst roleNameMap = roles.reduce((map, role) => {\n  map.set(role.name, role);\n  return map;\n}, new Map());\n\nexport default roles;\n\nexport const townsfolkRoles = roles.filter(isTownsfolk);\nexport const outsiderRoles = roles.filter(isOutsider);\nexport const minionRoles = roles.filter(isMinion);\nexport const demonRoles = roles.filter(isDemon);\n\nexport const roleOrder = [\n  findRoleByName('Poisoner'),\n  findRoleByName('Monk'),\n  findRoleByName('Undertaker'),\n  findRoleByName('Empath'),\n  findRoleByName('Fortune Teller'),\n  findRoleByName('Spy'),\n  findRoleByName('Imp'),\n  findRoleByName('Ravenkeeper')\n];\n\nfunction getLightColor(index, length) {\n  const hue = (360 * index) / length;\n  const sat = 80;\n  const lum = 70;\n  return `hsl(${hue},${sat}%,${lum}%)`;\n}\n\nfunction getDarkColor(index, length) {\n  const hue = (360 * index) / length;\n  const sat = 80;\n  const lum = 50;\n  return `hsl(${hue},${sat}%,${lum}%)`;\n}\n","import roles from '../roles';\n\nconst roleIdMap = roles.reduce((map, role) => {\n  map.set(role.id, role);\n  return map;\n}, new Map());\n\nexport default function getRoleById(roleId) {\n  return roleIdMap.get(+roleId);\n}\n","getAlignmentColor.dark = alignment => {\n  if (alignment === 'Demon' || alignment === 'Minion') {\n    return '#955';\n  }\n  return '#559';\n};\n\nexport default function getAlignmentColor(alignment) {\n  if (alignment === 'Demon' || alignment === 'Minion') {\n    return '#FAA';\n  }\n  return '#AAF';\n}\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { FaPlus, FaQuestionCircle, FaTrash } from 'react-icons/fa';\nimport Column from './Column';\nimport Row from './Row';\nimport roles from '../roles';\nimport BlockButton from './BlockButton';\nimport getRoleById from '../utils/getRoleById';\nimport getAlignmentColor from '../utils/getAlignmentColor';\n\nexport default function PlayerListItem(props) {\n  const {\n    player,\n    onPlayerChange,\n    onPlayerDelete,\n    onRoleClick,\n    ...rest\n  } = props;\n  const [status, setStatus] = useState('');\n\n  function handleNameChange(event) {\n    onPlayerChange({ ...player, name: event.currentTarget.value });\n  }\n\n  function handleRoleChange(event) {\n    onPlayerChange({\n      ...player,\n      role: getRoleById(event.currentTarget.value)\n    });\n  }\n\n  function handleStatusChange(event) {\n    setStatus(event.currentTarget.value);\n  }\n\n  function handleStatusFormSubmit(event) {\n    event.preventDefault();\n    const trimmedStatus = status.trim();\n\n    // ignore blanks\n    if (!trimmedStatus.length) {\n      return;\n    }\n\n    // ignore duplicates\n    if (player.statuses.includes(trimmedStatus)) {\n      return;\n    }\n\n    onPlayerChange({\n      ...player,\n      statuses: [...player.statuses, trimmedStatus]\n    });\n    setStatus('');\n  }\n\n  function handleDeadAliveClick() {\n    onPlayerChange({ ...player, dead: !player.dead });\n  }\n\n  function handleStatusClick(status) {\n    onPlayerChange({\n      ...player,\n      statuses: player.statuses.filter(other => other !== status)\n    });\n  }\n\n  return (\n    <Root {...rest} faded={player.dead}>\n      <TopRow>\n        <NameInput\n          placeholder=\"name\"\n          value={player.name || ''}\n          onChange={handleNameChange}\n        />\n        <RoleHelpButton\n          disabled={!player.role}\n          onClick={() => onRoleClick(player)}\n        >\n          <FaQuestionCircle\n            size={24}\n            color={player.role ? 'white' : 'rgba(255,255,255,0.2)'}\n          />\n        </RoleHelpButton>\n        <RoleSelect\n          value={player.role ? player.role.id : ''}\n          onChange={handleRoleChange}\n        >\n          <option disabled value=\"\">\n            Role\n          </option>\n          {roles.map(role => (\n            <option key={role.id} value={role.id}>\n              {role.name}\n            </option>\n          ))}\n        </RoleSelect>\n        {player.role && (\n          <AlignmentLabel color={getAlignmentColor(player.role.alignment)}>\n            {player.role.alignment}\n          </AlignmentLabel>\n        )}\n      </TopRow>\n\n      <SecondRow>\n        <StatusForm onSubmit={handleStatusFormSubmit}>\n          <StatusInput\n            placeholder=\"Status\"\n            value={status}\n            onChange={handleStatusChange}\n          />\n          <StatusAddButton>\n            <FaPlus color=\"#333\" />\n          </StatusAddButton>\n        </StatusForm>\n        <DeathRow>\n          <DeadAliveButton dead={player.dead} onClick={handleDeadAliveClick}>\n            {player.dead ? 'DEAD' : 'ALIVE'}\n          </DeadAliveButton>\n          <DeleteButton onClick={() => onPlayerDelete(player)}>\n            <FaTrash size={20} />\n          </DeleteButton>\n        </DeathRow>\n      </SecondRow>\n\n      <StatusRow>\n        {player.statuses.map((status, i) => (\n          <StatusPill\n            key={i}\n            color={getStatusColor(status)}\n            onClick={() => handleStatusClick(status)}\n          >\n            {status}\n            <span>{'\\u00D7'}</span>\n          </StatusPill>\n        ))}\n      </StatusRow>\n    </Root>\n  );\n}\n\nconst Root = styled(Column)`\n  padding: 20px 0 20px;\n  margin: 0 20px 0 20px;\n  border-bottom: 2px solid rgba(0, 0, 0, 0.5);\n  opacity: ${props => (props.faded ? 0.5 : 1)};\n  transition: opacity 0.5s;\n`;\n\nconst TopRow = styled(Row)`\n  margin-bottom: 20px;\n  > svg {\n    position: absolute;\n    right: 5px;\n    top: 50%;\n    transform: translate(0, -50%);\n    pointer-events: none;\n  }\n`;\n\nconst SecondRow = styled(Row)`\n  margin-bottom: 5px;\n`;\n\nconst Input = styled('input')`\n  flex: 1 1 auto;\n  height: 40px;\n  padding-left: 10px;\n  font-size: 16px;\n  min-width: 0;\n  border: none;\n`;\n\nconst Select = styled('select')`\n  color: white;\n  flex: 1;\n`;\n\nconst NameInput = styled(Input)`\n  flex: 1 1 120px;\n`;\n\nconst RoleSelect = styled(Select)`\n  flex: 1 0 160px;\n  font-size: 16px;\n  padding-left: 10px;\n  background-color: transparent;\n  border: none;\n  ${props => {\n    const role = props.value && getRoleById(props.value);\n    if (!role) {\n      return '';\n    }\n    return css`\n      color: white;\n      background-color: ${getAlignmentColor.dark(role.alignment)};\n    `;\n  }}\n`;\n\nconst RoleHelpButton = styled(BlockButton)`\n  padding: 0 10px 0 10px;\n`;\n\nconst StatusForm = styled(Row).attrs({ as: 'form' })`\n  height: 100%;\n  /* flex: 1 1 auto; */\n`;\n\nconst StatusAddButton = styled(BlockButton)`\n  position: relative;\n  background-color: white;\n  left: -1px;\n  width: 40px;\n  padding: 0;\n`;\n\nconst StatusInput = styled(Input)`\n  max-width: 120px;\n`;\n\nconst DeadAliveButton = styled(BlockButton)`\n  font-weight: bold;\n  font-size: 18px;\n  background-color: ${props => (props.dead ? '#222' : '#080')};\n  margin-left: 10px;\n  transition: background-color 0.1s;\n  max-width: 100px;\n`;\n\nconst StatusRow = styled(Row)`\n  flex-wrap: wrap;\n`;\n\nconst StatusPill = styled(BlockButton)`\n  align-items: center;\n  height: 30px;\n  border-radius: 15px;\n  padding: 3px 10px 3px 10px;\n  background-color: rgba(0, 0, 0, 0.8);\n  margin-right: 10px;\n  margin-top: 5px;\n  color: ${props => props.color};\n  span {\n    margin-left: 5px;\n  }\n`;\n\nconst AlignmentLabel = styled(Row)`\n  position: absolute;\n  right: 80px;\n  top: 100%;\n  transform: translate(50%, 0);\n  font-size: 10px;\n  color: ${props => props.color};\n`;\n\nconst DeleteButton = styled(BlockButton)`\n  padding: 0;\n  width: 60px;\n`;\n\nconst DeathRow = styled(Row)`\n  flex: 1 1 auto;\n  justify-content: flex-end;\n`;\n\nfunction getStatusColor(status) {\n  return `hsl(${stringToHue(status)}, 80%, 80%)`;\n}\n\n// From: https://gist.github.com/0x263b/2bdd90886c2036a1ad5bcf06d6e6fb37\nconst stringToHueCache = new Map();\nfunction stringToHue(str) {\n  if (!stringToHueCache.has(str)) {\n    const { length } = str;\n    let hash = 0;\n    if (length !== 0) {\n      for (let i = 0; i < length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n        hash = hash & hash;\n      }\n      hash = hash % 360;\n    }\n    stringToHueCache.set(str, hash);\n    return hash;\n  }\n  return stringToHueCache.get(str);\n}\n","import sampleSize from 'lodash/sampleSize';\nimport shuffle from 'lodash/shuffle';\nimport {\n  townsfolkRoles,\n  outsiderRoles,\n  minionRoles,\n  demonRoles,\n  isBaron,\n  isTownsfolk,\n  isNotTownsfolk,\n  isRoleInArray\n} from '../roles';\n\nexport default function getRandomRoles(playerCount) {\n  let playerRoles;\n\n  switch (playerCount) {\n    case 5:\n      playerRoles = [\n        ...sampleSize(townsfolkRoles, 3),\n        ...sampleSize(outsiderRoles, 0),\n        ...sampleSize(minionRoles, 1),\n        ...sampleSize(demonRoles, 1)\n      ];\n      break;\n    case 6:\n      playerRoles = [\n        ...sampleSize(townsfolkRoles, 3),\n        ...sampleSize(outsiderRoles, 1),\n        ...sampleSize(minionRoles, 1),\n        ...sampleSize(demonRoles, 1)\n      ];\n      break;\n    case 7:\n      playerRoles = [\n        ...sampleSize(townsfolkRoles, 5),\n        ...sampleSize(outsiderRoles, 0),\n        ...sampleSize(minionRoles, 1),\n        ...sampleSize(demonRoles, 1)\n      ];\n      break;\n    case 8:\n      playerRoles = [\n        ...sampleSize(townsfolkRoles, 5),\n        ...sampleSize(outsiderRoles, 1),\n        ...sampleSize(minionRoles, 1),\n        ...sampleSize(demonRoles, 1)\n      ];\n      break;\n    case 9:\n      playerRoles = [\n        ...sampleSize(townsfolkRoles, 5),\n        ...sampleSize(outsiderRoles, 2),\n        ...sampleSize(minionRoles, 1),\n        ...sampleSize(demonRoles, 1)\n      ];\n      break;\n    case 10:\n      playerRoles = [\n        ...sampleSize(townsfolkRoles, 7),\n        ...sampleSize(outsiderRoles, 0),\n        ...sampleSize(minionRoles, 2),\n        ...sampleSize(demonRoles, 1)\n      ];\n      break;\n    case 11:\n      playerRoles = [\n        ...sampleSize(townsfolkRoles, 7),\n        ...sampleSize(outsiderRoles, 1),\n        ...sampleSize(minionRoles, 2),\n        ...sampleSize(demonRoles, 1)\n      ];\n      break;\n    case 12:\n      playerRoles = [\n        ...sampleSize(townsfolkRoles, 7),\n        ...sampleSize(outsiderRoles, 2),\n        ...sampleSize(minionRoles, 2),\n        ...sampleSize(demonRoles, 1)\n      ];\n      break;\n    case 13:\n      playerRoles = [\n        ...sampleSize(townsfolkRoles, 9),\n        ...sampleSize(outsiderRoles, 0),\n        ...sampleSize(minionRoles, 3),\n        ...sampleSize(demonRoles, 1)\n      ];\n      break;\n    case 14:\n      playerRoles = [\n        ...sampleSize(townsfolkRoles, 9),\n        ...sampleSize(outsiderRoles, 1),\n        ...sampleSize(minionRoles, 3),\n        ...sampleSize(demonRoles, 1)\n      ];\n      break;\n    case 15:\n      playerRoles = [\n        ...sampleSize(townsfolkRoles, 9),\n        ...sampleSize(outsiderRoles, 2),\n        ...sampleSize(minionRoles, 3),\n        ...sampleSize(demonRoles, 1)\n      ];\n      break;\n    default:\n      playerRoles = [\n        ...sampleSize(townsfolkRoles, 9),\n        ...sampleSize(outsiderRoles, 2),\n        ...sampleSize(minionRoles, 3),\n        ...sampleSize(demonRoles, 1)\n      ];\n      break;\n  }\n\n  // If the baron was picked, replace 2 townsfolk with 2 outsiders\n  if (playerRoles.some(isBaron)) {\n    const townsfolk = playerRoles.filter(isTownsfolk);\n    const nonTownsfolk = playerRoles.filter(isNotTownsfolk);\n\n    // Pick 2 random outsiders\n    const outsiders = sampleSize(\n      // Make sure not to pick an outsider that's already picked\n      outsiderRoles.filter(role => !isRoleInArray(nonTownsfolk, role)),\n      2\n    );\n\n    // Pick 2 random townsfolk to replace\n    const townsfolkToRemove = sampleSize(townsfolk, 2);\n\n    // Get all the townsfolk that aren't being replaced\n    const remainingTownsfolk = townsfolk.filter(\n      role => !isRoleInArray(townsfolkToRemove, role)\n    );\n\n    // Combine the surviving townsfolk, the outsiders, and any other non-townsfolk\n    playerRoles = [...remainingTownsfolk, ...outsiders, ...nonTownsfolk];\n  }\n\n  return shuffle(playerRoles);\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport debounce from \"lodash/debounce\";\nimport { FaTrash, FaDice, FaUserPlus, FaMoon } from \"react-icons/fa\";\nimport SA from \"sweetalert2\";\nimport nanoid from \"nanoid\";\nimport Column from \"./components/Column\";\nimport Row from \"./components/Row\";\nimport BlockButton from \"./components/BlockButton\";\nimport roles, { roleOrder } from \"./roles\";\nimport PlayerListItem from \"./components/PlayerListItem\";\nimport getAlignmentColor from \"./utils/getAlignmentColor\";\nimport getRandomRoles from \"./utils/getRandomRoles\";\n\nconst localStorageKey = \"WEREWOLF_STATE\";\nconst initialState = loadInitialState();\n\nfunction loadInitialState() {\n  const initialStateString = localStorage.getItem(localStorageKey);\n  let initialState = { players: [] };\n\n  try {\n    Object.assign(initialState, JSON.parse(initialStateString));\n  } catch (error) {\n    console.error(\"Failed to load state\", error);\n  }\n\n  for (const player of initialState.players) {\n    if (player.role) {\n      player.role = roles.find((other) => other.id === player.role.id);\n    }\n  }\n\n  return initialState;\n}\n\nfunction saveState(state) {\n  localStorage.setItem(localStorageKey, JSON.stringify(state));\n}\n\nconst debouncedSaveState = debounce(saveState, 500);\n\nexport default function App() {\n  const [players, setPlayers] = useState(initialState.players || []);\n  const [changed, setChanged] = useState(false);\n  const [helpRole, setHelpRole] = useState(null);\n  const [showNightHelper, setShowNightHelper] = useState(false);\n\n  const helpDrawerOpen = !!helpRole || showNightHelper;\n  const canUseNightHelper =\n    players.length > 0 &&\n    players.every((player) => {\n      return !!(player.role && player.name.length > 0);\n    });\n\n  useEffect(() => {\n    debouncedSaveState({ players });\n  }, [players]);\n\n  async function handleResetClick() {\n    const confirmResult = await SA.fire({\n      title: \"Are you sure?\",\n      text: \"This will delete all players.\",\n      showCancelButton: true,\n    });\n\n    if (confirmResult.value) {\n      setPlayers([]);\n      setChanged(false);\n    }\n  }\n\n  async function handleRandomizeClick() {\n    if (changed) {\n      const confirmResult = await SA.fire({\n        title: \"Are you sure?\",\n        text: \"This will clear all your changes.\",\n        showCancelButton: true,\n      });\n      if (!confirmResult.value) {\n        return;\n      }\n    }\n\n    const playerRoles = getRandomRoles(players.length);\n    const newPlayers = players.map((player, i) => ({\n      ...player,\n      role: playerRoles[i],\n      dead: false,\n      statuses: [],\n    }));\n\n    setPlayers(newPlayers);\n    setChanged(false);\n  }\n\n  function handleAddUserClick() {\n    setPlayers([\n      ...players,\n      {\n        id: nanoid(),\n        name: \"\",\n        role: null,\n        statuses: [],\n        dead: false,\n      },\n    ]);\n  }\n\n  function handlePlayerChange(player) {\n    setChanged(true);\n    setPlayers(\n      players.map((other) => (other.id === player.id ? player : other))\n    );\n  }\n\n  async function handlePlayerDelete(player) {\n    if (!changed) {\n      setChanged(true);\n    }\n    const confirmResult = await SA.fire({\n      title: \"Are you sure?\",\n      text: `Delete player ${player.name}?`,\n      showCancelButton: true,\n    });\n    if (!confirmResult.value) {\n      return;\n    }\n    setPlayers(players.filter((other) => other.id !== player.id));\n  }\n\n  function handleNightClick() {\n    setShowNightHelper(true);\n  }\n\n  function handleViewRoleClick(player) {\n    setHelpRole(player.role);\n  }\n\n  function closeHelpDrawer() {\n    setHelpRole(null);\n    setShowNightHelper(false);\n  }\n\n  function renderHelpDrawer() {\n    if (!helpDrawerOpen) return <HelpDrawer open={false} />;\n\n    if (helpRole) {\n      return (\n        <HelpDrawer open>\n          <HelpDrawerCloseButton onClick={closeHelpDrawer}>\n            {\"\\u00D7\"}\n          </HelpDrawerCloseButton>\n          <RoleHelp role={helpRole} />\n        </HelpDrawer>\n      );\n    }\n\n    if (showNightHelper) {\n      return (\n        <HelpDrawer open>\n          <HelpDrawerCloseButton onClick={closeHelpDrawer}>\n            {\"\\u00D7\"}\n          </HelpDrawerCloseButton>\n          <NightHelperDrawer players={players} onClose={closeHelpDrawer} />\n        </HelpDrawer>\n      );\n    }\n  }\n\n  return (\n    <Root>\n      {renderHelpDrawer()}\n      {helpDrawerOpen && <HelpDrawerOverlay onClick={closeHelpDrawer} />}\n      <Header>\n        <BlockButton onClick={handleResetClick}>\n          <FaTrash size={36} />\n        </BlockButton>\n        <BlockButton onClick={handleRandomizeClick}>\n          <FaDice size={40} />\n        </BlockButton>\n        <BlockButton onClick={handleAddUserClick}>\n          <FaUserPlus size={40} />\n        </BlockButton>\n        <BlockButton disabled={!canUseNightHelper} onClick={handleNightClick}>\n          <FaMoon size={36} />\n        </BlockButton>\n      </Header>\n      <Content>\n        {players.map((player) => (\n          <PlayerListItem\n            key={player.id}\n            player={player}\n            onPlayerChange={handlePlayerChange}\n            onPlayerDelete={handlePlayerDelete}\n            onRoleClick={handleViewRoleClick}\n          />\n        ))}\n      </Content>\n    </Root>\n  );\n}\n\nconst Root = styled(Column)`\n  height: 100vh;\n  background-color: #333;\n  color: white;\n  overflow: hidden;\n`;\n\nconst Header = styled(Row)`\n  border-bottom: 2px solid rgba(0, 0, 0, 0.5);\n  ${BlockButton} {\n    padding-top: 15px;\n    padding-bottom: 15px;\n    flex: 1;\n  }\n`;\n\nconst Content = styled(Column)`\n  flex: 1;\n  overflow: auto;\n  padding: 20px 0 20px 0;\n`;\n\nconst HelpDrawer = styled(Column)`\n  position: fixed;\n  left: 0;\n  top: 0;\n  padding: 0 20px 0 20px;\n  height: 100vh;\n  overflow: auto;\n  width: 80vw;\n  max-width: 450px;\n  background-color: #333;\n  box-shadow: 3px 10px rgba(0, 0, 0, 0.3);\n  z-index: 3;\n  transition: transform 0.4s;\n  transform: ${(props) =>\n    props.open ? `translate(0, 0)` : `translate(-100%, 0)`};\n\n  h1 {\n    text-align: center;\n  }\n`;\n\nconst HelpDrawerOverlay = styled(\"div\")`\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: 2;\n  background-color: rgba(0, 0, 0, 0.3);\n  animation-duration: 0.4s;\n  animation-iteration-count: 1;\n  animation-fill-mode: forwards;\n  cursor: pointer;\n  animation-name: ${keyframes`\n    from {\n      opacity: 0;\n    } to {\n      opacity: 1;\n    }\n  `};\n`;\n\nconst HelpDrawerCloseButton = styled(BlockButton)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  font-size: 32px;\n  line-height: 30px;\n`;\n\nconst DarkBlockButton = styled(BlockButton)`\n  background-color: ${(props) => (props.highlighted ? \"#559\" : \"#555\")};\n  transition: background-color 0.2s;\n  padding-top: 10px;\n  padding-bottom: 10px;\n\n  &:active {\n    background-color: #222;\n  }\n`;\n\nfunction NightHelperDrawer({ players, onClose }) {\n  const [playerIndex, setPlayerIndex] = useState(0);\n  const sortedPlayers = players\n    .filter((player) => !player.dead && roleOrder.includes(player.role))\n    .sort(sortPlayersByRoleOrder);\n  const player = sortedPlayers[playerIndex];\n  const isLastPlayer = playerIndex >= sortedPlayers.length - 1;\n\n  function handleNextClick() {\n    setPlayerIndex(playerIndex + 1);\n  }\n\n  return (\n    <React.Fragment>\n      {player && <h1 style={{ paddingTop: 10 }}>Wake up {player.name}</h1>}\n      {player && player.role && <RoleHelp role={player.role} />}\n      <div style={{ flex: 1 }} />\n      <DarkBlockButton\n        onClick={isLastPlayer ? onClose : handleNextClick}\n        highlighted={isLastPlayer}\n        style={{ marginBottom: 50 }}\n      >\n        {isLastPlayer ? \"End Night\" : \"Next Player\"}\n      </DarkBlockButton>\n    </React.Fragment>\n  );\n}\n\nfunction RoleHelp({ role, hideName }) {\n  return (\n    <React.Fragment>\n      {hideName ? \"\" : <h1 style={{ color: role.lightColor }}>{role.name}</h1>}\n      <h2>Alignment</h2>\n      <p style={{ color: getAlignmentColor(role.alignment) }}>\n        {role.alignment}\n      </p>\n      <h2>Ability</h2>\n      <p>{role.ability}</p>\n      <h2>Example</h2>\n      <p>{role.example}</p>\n    </React.Fragment>\n  );\n}\n\nfunction sortPlayersByRoleOrder(a, b) {\n  return roleOrder.indexOf(a.role) - roleOrder.indexOf(b.role);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}